# This workflow checks the quality of PHP code in the Simple WP Optimizer plugin.
# It runs PHP_CodeSniffer to ensure adherence to WordPress coding standards,
# performs PHP compatibility checks to ensure the plugin works across PHP versions,
# and validates PHP syntax to catch errors before they reach production.
# The workflow is triggered when PHP files are changed in pushes or pull requests.

name: PHP Code Quality

on:
  push:
    branches: [ main ]
    paths:
      - '**.php'
  pull_request:
    branches: [ main ]
    paths:
      - '**.php'

# Define permissions needed for auto-committing fixes
permissions:
  contents: write

jobs:
  php-code-quality:
    name: PHP Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: mbstring, intl, curl
          tools: composer:v2, phpcs, wp-coding-standards
          
      - name: Install dependencies
        run: |
          # First try and handle dependency conflicts
          composer config platform.php 7.4
          composer install --prefer-dist --no-progress --no-suggest || {
            echo "Standard install failed, trying with --ignore-platform-reqs"
            composer install --prefer-dist --no-progress --no-suggest --ignore-platform-reqs
          }
          
          # Verify installation was successful
          if [ ! -d "vendor" ]; then
            echo "::warning::Composer installation failed, using direct approach"
            composer require --dev wp-coding-standards/wpcs dealerdirect/phpcodesniffer-composer-installer phpcompatibility/php-compatibility --no-interaction
          fi

      - name: Run PHP Code Beautifier and Fixer
        run: |
          if [ -f phpcs.xml ] || [ -f phpcs.xml.dist ]; then
            # Try to fix code style issues automatically using the project's standards
            vendor/bin/phpcbf --standard=phpcs.xml || vendor/bin/phpcbf --standard=phpcs.xml.dist || true
          else
            # Use WordPress-Core standard if no phpcs config file exists
            vendor/bin/phpcbf --standard=WordPress-Core --extensions=php --ignore=vendor/,node_modules/ . || true
          fi
          # The '|| true' ensures the workflow continues even if phpcbf exits with non-zero code

      - name: Run PHP_CodeSniffer
        run: |
          if [ -f phpcs.xml ] || [ -f phpcs.xml.dist ]; then
            vendor/bin/phpcs --standard=phpcs.xml || vendor/bin/phpcs --standard=phpcs.xml.dist
          else
            vendor/bin/phpcs --standard=WordPress-Core --extensions=php --ignore=vendor/,node_modules/ .
          fi

      - name: Run PHP Compatibility Check
        run: |
          # Install PHP compatibility standards if they're not already installed
          composer require --dev phpcompatibility/php-compatibility wp-coding-standards/wpcs dealerdirect/phpcodesniffer-composer-installer --no-interaction || true
          
          # Set up PHPCompatibility standard
          vendor/bin/phpcs --config-set installed_paths $(pwd)/vendor/phpcompatibility/php-compatibility || true
          
          # Try to auto-fix compatibility issues where possible
          vendor/bin/phpcbf --standard=PHPCompatibilityWP --extensions=php --ignore=vendor/,node_modules/ --runtime-set testVersion 7.0- . || true
          
          # Run the actual compatibility check
          vendor/bin/phpcs --standard=PHPCompatibilityWP --extensions=php --ignore=vendor/,node_modules/ --runtime-set testVersion 7.0- .

      - name: Check PHP syntax
        run: |
          find . -type f -name "*.php" -not -path "./vendor/*" -not -path "./node_modules/*" -print0 | xargs -0 -n1 php -l

      - name: Commit auto-fixed code style changes
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          # Configure Git
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Check if there are changes to commit
          if git diff --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          
          # Commit and push changes
          git add .
          git commit -m "Auto-fix code style issues with PHPCBF [skip ci]" || true
          git push || true
